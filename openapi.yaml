openapi: 3.0.0
info:
  title: FXLuminaire Luxor
  description: API specification for FXLuminaire's Luxor lighting system.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0

servers:
- url: http://{host}
  variables:
    host:
      default: "localhost"

components:
  schemas:
    AssignLightRequest:
      type: object
      properties:
        SerialNumber:
          type: integer
        GroupNumber:
          type: integer
          format: uint8
      required:
        - SerialNumber
        - GroupNumber
    AssignLightResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ControllerNameResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Controller:
          type: string
        ConnType:
          type: string
        RSSI:
          type: integer
    ExtinguishAllResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    FlashLightsRequest:
      type: object
      properties:
        OnOff:
          type: integer
          format: uint8
      required:
        - OnOff
    FlashLightsResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    Group:
      type: object
      properties:
        Grp:
          description: Group number
          type: integer
          format: uint8
        Name:
          type: string
        Inten:
          description: Intensity
          type: integer
          format: uint8
        Colr:
          description: Color
          type: integer
          format: uint8
    GroupListAddRequest:
      type: object
      properties:
        GroupNumber:
          type: integer
          format: uint8
        Name:
          type: string
      required:
      - GroupNumber
      - Name
    GroupListAddResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    GroupListClearResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        GroupList:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    GroupListDeleteRequest:
      type: object
      properties:
        Name:
          type: string
      required:
      - Name
    GroupListDeleteResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    GroupListGetResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        GroupList:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    GroupListRenameRequest:
      type: object
      properties:
        OldName:
          type: string
        NewName:
          type: string
      required:
      - OldName
      - NewName
    GroupListRenameResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    GroupListReorderRequest:
      type: object
      properties:
        GroupNumbers:
          type: array
          items:
            type: integer
            format: uint8
      required:
      - GroupNumbers
    GroupListReorderResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    IlluminateAllResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    IlluminateGroupRequest:
      type: object
      properties:
        GroupNumber:
          type: integer
          format: uint8
        Intensity:
          type: integer
          format: uint8
      required:
      - GroupNumber
      - Intensity
    IlluminateGroupResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    IlluminateThemeRequest:
      type: object
      properties:
        ThemeIndex:
          type: integer
          format: uint8
        OnOff:
          description: "0 to turn off, or non-zero to set intensity"
          type: integer
          format: uint8
      required:
      - ThemeIndex
      - OnOff
    IlluminateThemeResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    Status:
      type: integer
      format: uint8
    Theme:
      type: object
      properties:
        ThemeIndex:
          description: Theme number
          type: integer
          format: uint8
        Name:
          type: string
        OnOff:
          description: Color
          type: integer
          format: uint8
    ThemeGroup:
      type: object
      properties:
        GroupNumber:
          description: Group number
          type: integer
        Intensity:
          description: Intensity
          type: integer
          format: uint8
        Color:
          description: Color
          type: integer
          format: uint8
    ThemeClearRequest:
      type: object
      properties:
        ThemeIndex:
          type: integer
          format: uint8
      required:
      - ThemeIndex
    ThemeClearResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ThemeGetRequest:
      type: object
      properties:
        ThemeIndex:
          type: integer
          format: uint8
      required:
      - ThemeIndex
    ThemeGetResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/ThemeGroup'
    ThemeListAddRequest:
      type: object
      properties:
        ThemeIndex:
          type: integer
          format: uint8
        Name:
          type: string
      required:
      - ThemeIndex
      - Name
    ThemeListAddResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ThemeListClearResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ThemeListDeleteRequest:
      type: object
      properties:
        Name:
          type: string
      required:
      - Name
    ThemeListDeleteResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ThemeListGetResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Restricted:
          description: "Restricted will be non-zero if themes are restricted in controller's setup menu. This implies some operations may not be performed through the API."
          type: integer
        ThemeList:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
    ThemeListRenameRequest:
      type: object
      properties:
        OldName:
          type: string
        NewName:
          type: string
      required:
      - OldName
      - NewName
    ThemeListRenameResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ThemeListReorderRequest:
      type: object
      properties:
        ThemeIndexes:
          type: array
          items:
            type: integer
            format: uint8
      required:
      - ThemeIndexes
    ThemeListReorderResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    ThemeSetRequest:
      type: object
      properties:
        ThemeIndex:
          type: array
          items:
            type: integer
            format: uint8
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/ThemeGroup'
      required:
      - ThemeIndex
      - Groups
    ThemeSetResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'

paths:
  /AssignLight.json:
    post:
      operationId: AssignLight
      tags:
        - Lights
      summary: "Assign a light to a group"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignLightRequest'
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/AssignLightResponse'

  /ControllerName.json:
    post:
      operationId: ControllerName
      tags:
        - Controller
      summary: "Retrieve controller details"
      responses:
        '200':
          description: "Controller details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerNameResponse'
                
  /ExtinguishAll.json:
    post:
      operationId: ExtinguishAll
      tags:
        - Lights
      summary: "Turn off all lights"
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtinguishAllResponse'

  /FlashLights.json:
    post:
      operationId: FlashLights
      summary: "Flash all lights"
      tags:
        - Lights
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashLightsRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashLightsResponse'

  /GroupListAdd.json:
    post:
      operationId: GroupListAdd
      tags:
        - Groups
      summary: "Add a group"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupListAddRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashLightsResponse'

  /GroupListClear.json:
    post:
      operationId: GroupListClear
      tags:
        - Groups
      summary: "TBD"
      responses:
        '200':
          description: "TBD"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListClearResponse'

  /GroupListDelete.json:
    post:
      operationId: GroupListDelete
      tags:
        - Groups
      summary: "Delete a group"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupListDeleteRequest'
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListDeleteResponse'

  /GroupListGet.json:
    post:
      operationId: GroupListGet
      tags:
        - Groups
      summary: "Retrieve all groups"        
      responses:
        '200':
          description: "List of groups"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListGetResponse'

  /GroupListRename.json:
    post:
      operationId: GroupListRename
      tags:
        - Groups
      summary: "Rename a group"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupListRenameRequest'
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListRenameResponse'
  
  /GroupListReorder.json:
    post:
      operationId: GroupListReorder
      tags:
        - Groups
      summary: "Reorder all groups"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupListReorderRequest'
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListReorderResponse'

  /IlluminateAll.json:
    post:
      operationId: IlluminateAll
      tags:
        - Lights
      summary: "Turn on all lights"
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IlluminateAllResponse'

  /IlluminateGroup.json:
    post:
      operationId: IlluminateGroup
      tags:
        - Groups
      summary: "Turn on a group of lights"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IlluminateGroupRequest'
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IlluminateGroupResponse'

  /IlluminateTheme.json:
    post:
      operationId: IlluminateTheme
      tags:
        - Themes
      summary: "Activate a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IlluminateThemeRequest'
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IlluminateThemeResponse'

  /ThemeClear.json:
    post:
      operationId: ThemeClear
      tags:
        - Themes
      summary: "TBD"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeClearRequest'
      responses:
        '200':
          description: "Command result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeClearResponse'

  /ThemeGet.json:
    post:
      operationId: ThemeGet
      tags:
        - Themes
      summary: "Retrieve a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeGetRequest'
      responses:
        '200':
          description: "List of groups"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeGetResponse'

  /ThemeListAdd.json:
    post:
      operationId: ThemeListAdd
      tags:
        - Themes
      summary: "Add a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeListAddRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeListAddResponse'

  /ThemeListClear.json:
    post:
      operationId: ThemeListClear
      tags:
        - Themes
      summary: "TBD"
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeListClearResponse'

  /ThemeListDelete.json:
    post:
      operationId: ThemeListDelete
      tags:
        - Themes
      summary: "Delete a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeListDeleteRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeListDeleteResponse'

  /ThemeListGet.json:
    post:
      operationId: ThemeListGet
      tags:
        - Themes
      summary: "Retrieve list of themes"
      responses:
        '200':
          description: "List of themes"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeListGetResponse'

  /ThemeListRename.json:
    post:
      operationId: ThemeListRename
      tags:
        - Themes
      summary: "Rename a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeListRenameRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeListRenameResponse'
  
  /ThemeListReorder.json:
    post:
      operationId: ThemeListReorder
      tags:
        - Themes
      summary: "Reorder a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeListReorderRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeListReorderResponse'

  /ThemeSet.json:
    post:
      operationId: ThemeSet
      tags:
        - Themes
      summary: "Activate a theme"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeSetRequest'
      responses:
        '200':
          description: "Command status"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeSetResponse'

    # Ok,
    # UnknownMethod,
    # UnparseableRequest,
    # InvalidRequest,
    # ColorValueOutOfRange,
    # PreconditionFailed,
    # GroupNameInUse,
    # GroupNumberInUse,
    # ItemDoesNotExist,
    # BadGroupNumber,
    # ThemeIndexOutOfRange,
    # BadThemeIndex,
    # ThemeChangesRestricted,
    # Unknown,
